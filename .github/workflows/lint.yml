name: Lint

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  golangci:
    name: Lint
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24'

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-lint-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-lint-

    - name: Download dependencies
      run: go mod download

    - name: Install golangci-lint
      run: |
        curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v2.2.2
        echo "$(go env GOPATH)/bin" >> $GITHUB_PATH

    - name: Run golangci-lint
      run: golangci-lint run --verbose

    - name: Check formatting
      run: |
        if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then
          echo "❌ Code is not properly formatted"
          echo "Run 'go fmt ./...' to fix formatting issues:"
          gofmt -s -l .
          exit 1
        else
          echo "✅ Code is properly formatted"
        fi

    - name: Check imports
      run: |
        go install golang.org/x/tools/cmd/goimports@latest
        if [ "$(goimports -l . | wc -l)" -gt 0 ]; then
          echo "❌ Imports are not properly organized"
          echo "Run 'goimports -w .' to fix import issues:"
          goimports -l .
          exit 1
        else
          echo "✅ Imports are properly organized"
        fi

    - name: Run go vet
      run: go vet ./...

    - name: Check for ineffectual assignments
      run: |
        go install github.com/gordonklaus/ineffassign@latest
        ineffassign ./...

    - name: Check for misspellings
      run: |
        go install github.com/client9/misspell/cmd/misspell@latest
        misspell -error .

    - name: Security scan
      run: |
        go install golang.org/x/vuln/cmd/govulncheck@latest
        govulncheck -json ./... > security-report.json || true
        
    - name: Upload security report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: security-report
        path: security-report.json
